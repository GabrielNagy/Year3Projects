#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass report
\begin_preamble
\usepackage{amsthm}%% \usepackage[romanian]{babel}
\usepackage{graphicx}
\usepackage{color}
\definecolor{deepblue}{rgb}{0,0,0.5}
\definecolor{deepred}{rgb}{0.6,0,0}
\definecolor{deepgreen}{rgb}{0,0.5,0}
%\usepackage{...insert other packages here...}
\usepackage{indentfirst}
\newtheorem{thm}{Teorema}[section]
\newtheorem{lem}[thm]{Lema}\newtheorem{cor}[thm]{Corolarul}\newtheorem{prop}[thm]{Propozi\c tia}\theoremstyle{definition}
\newtheorem{defn}{Defini\c tia}[section]
\theoremstyle{remark}
\newtheorem{rem}{Remarca}[section]
\newtheorem{exmp}{Exemplul}[section]
% Default fixed font does not support bold face
\DeclareFixedFont{\ttb}{T1}{txtt}{bx}{n}{10} % for bold
\DeclareFixedFont{\ttm}{T1}{txtt}{m}{n}{10}  % for normal
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding auto
\fontencoding default
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_bookmarks false
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref section
\pdf_pdfusetitle false
\papersize a4paper
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine natbib
\cite_engine_type numerical
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.2in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "basicstyle={\ttfamily},columns=fullflexible"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h!
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset VSpace -20pt
\end_inset

 
\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename FMI-03.png
	lyxscale 5
	width 100pt

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
\size large
WEST UNIVERSITY OF TIMIȘOARA
\end_layout

\begin_layout Standard
\align center

\series bold
\size large
FACULTY OF MATHEMATICS AND COMPUTER SCIENCE
\end_layout

\begin_layout Standard
\align center

\series bold
\size large
STUDY PROGRAM: COMPUTER SCIENCE IN ENGLISH
\end_layout

\begin_layout Standard
\align center
\begin_inset VSpace 120pt
\end_inset


\series bold
\size huge
BACHELOR THESIS
\end_layout

\begin_layout Standard
\align center
\begin_inset VSpace 160pt
\end_inset

 
\end_layout

\begin_layout Standard

\series bold
\size large
COORDINATOR:
\begin_inset space \hspace{}
\length 140pt
\end_inset

 GRADUATE:
\end_layout

\begin_layout Standard
\noindent

\size large
Lect.Univ.Dr.Stelian Mihalaș
\begin_inset space \hspace{}
\length 73pt
\end_inset

 Nagy Gabriel Alexandru
\end_layout

\begin_layout Standard
\begin_inset VSpace 100pt
\end_inset

 
\end_layout

\begin_layout Standard
\align center

\series bold
TIMIŞOARA
\end_layout

\begin_layout Standard
\align center

\series bold
2018
\series default
 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\align center

\series bold
\size large
WEST UNIVERSITY OF TIMIȘOARA
\end_layout

\begin_layout Standard
\align center

\series bold
\size large
FACULTY OF MATHEMATICS AND COMPUTER SCIENCE
\end_layout

\begin_layout Standard
\align center

\series bold
\size large
STUDY PROGRAM: COMPUTER SCIENCE IN ENGLISH
\end_layout

\begin_layout Standard
\align center
\begin_inset VSpace 200pt
\end_inset

 
\series bold
\size huge
CONTINUOUS INTEGRATION
\end_layout

\begin_layout Standard
\align center

\series bold
\size huge
WITH BUILDBOT 
\series default
\size default

\begin_inset ERT
status open

\begin_layout Plain Layout

% Inserati titlul aici!
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset VSpace 153pt
\end_inset

 
\end_layout

\begin_layout Standard

\series bold
\size large
COORDINATOR:
\begin_inset space \hspace{}
\length 140pt
\end_inset

 GRADUATE:
\end_layout

\begin_layout Standard
\noindent

\size large
Lect.Univ.Dr.Stelian Mihalaș
\begin_inset space \hspace{}
\length 73pt
\end_inset

 Nagy Gabriel Alexandru
\end_layout

\begin_layout Standard
\begin_inset VSpace 100pt
\end_inset

 
\end_layout

\begin_layout Standard
\align center

\series bold
TIMIŞOARA
\end_layout

\begin_layout Standard
\align center

\series bold
2018
\series default
 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\size normal

\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 
\end_layout

\begin_layout Section*
Abstract
\end_layout

\begin_layout Standard

\size normal
The purpose of this thesis is to shed light on Buildbot as a Continuous
 Integration tool.
 Continuous Integration (CI) is the process of automating the build and
 testing of code every time a team member commits changes to version control.
 We target to do this by automating most of the delivery process related
 tasks, freeing the developer to do other software development related tasks.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\size normal
Using Buildbot, developers cand test their components for possible errors
 without the risk of committing to version control and breaking the code.
 Buildbot is an open source project, written in Python on top of the Twisted
 network programming framework.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\size normal
In this thesis we will emphasize the extensibility of Buildbot, and how
 we can use Python and Angular to strengthen the capabilities of this tool,
 customizing it to best suit our project.
\end_layout

\begin_layout Standard

\size normal
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Section
Motivation
\end_layout

\begin_layout Standard
Generally, every software company, regardless how large or small, uses Continuou
s Integration principles.
 Verifying and testing code before delivering and merging with the mainline
 is of paramount importance, as it saves money as well as time.
\end_layout

\begin_layout Standard
While smaller companies might make use of more flexible ways of testing,
 the larger ones usually run a CI tool such as Jenkins, on which they run
 builds of every commit that finds its way to the master/trunk branch.
 This is a widespread and useful practice, albeit narrow, as it only tracks
 main branches.
 If a commit happens to break the code, the trunk gets locked and valuable
 time is spent to fix the regressions.
 What I will present in this thesis is how developers can use Buildbot as
 a tool to remotely test their software, without interfering with other
 people's work.
 We tell Buildbot the same step sequence the developer uses to test their
 code, and it does the job for us.
\end_layout

\begin_layout Standard
By transferring these tasks to Buildbot, the developer can work on other
 important issues without worrying about the testing part.
 
\end_layout

\begin_layout Section
Contribution
\end_layout

\begin_layout Standard
Even though Buildbot is a powerful tool out-of-the-box, it really shines
 if properly customized and extended.
 Being an open-source project, it receives frequent contributions from users
 around the world.
 The codebase is modular and properly documented, and one can easily begin
 writing their own extensions and helpers.
\end_layout

\begin_layout Standard
Some of Buildbot's default features are:
\end_layout

\begin_layout Itemize
run builds on a variety of worker platforms
\end_layout

\begin_layout Itemize
arbitrary build process: if you can build it locally, so can Buildbot
\end_layout

\begin_layout Itemize
minimal requirements: Python and Twisted
\end_layout

\begin_layout Itemize
status delivery through a variety of protocols: web page, email, IRC
\end_layout

\begin_layout Itemize
tracks builds in progress, estimates completion time
\end_layout

\begin_layout Itemize
flexible configuration by subclassing generic build process classes
\end_layout

\begin_layout Itemize
released under the GPL
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
The 
\series bold
\size normal
GNU General Public License
\series default
 (
\series bold
GPL
\series default
), originally written by Richard Stallman of the Free Software Foundation,
 is a widely used free software license, which guarantees end users the
 freedom to run, study, share and modify the software.
\end_layout

\end_inset

 license
\end_layout

\begin_layout Standard
The custom implementations that we will go over consist in:
\end_layout

\begin_layout Itemize
send an email with the build results to the user using LDAP to search the
 directory for the user's email address
\end_layout

\begin_layout Itemize
parse custom output logs, counting errors and creating a summary of the
 passed and failed tests
\end_layout

\begin_layout Itemize
preferential build steps: do not run this step if the previous failed
\end_layout

\begin_layout Itemize
use Flask to deploy a custom web dashboard
\end_layout

\begin_layout Itemize
use Angular to deploy an asynchronous, live-reloading, custom web dashboard
\end_layout

\begin_layout Itemize
buildbot try script: the developer executes a script in his working directory,
 and his changes are instantly send to the Buildbot queue to be built
\end_layout

\begin_layout Itemize
extend buildbot commands to support additional arguments such as multiple
 patchfiles
\end_layout

\begin_layout Section
Structure
\end_layout

\begin_layout Standard
Besides presenting the technologies used, before getting into the extensibility
 of Buildbot, I will also shed light on some of its default implementations
 to see their purposes.
\end_layout

\begin_layout Chapter
Technologies used
\end_layout

\begin_layout Section
Backend
\end_layout

\begin_layout Standard
By definition, Buildbot is a system to automate the compile/test cycle required
 by most software projects to validate code changes.
 By automatically rebuilding and testing the tree each time something has
 changed, build problems are pinpointed quickly, before other developers
 are inconvenienced by the failure.
 By running the builds on a variety of platforms, developers who do not
 have the facilities to test their changes everywhere before checkin will
 at least know shortly afterwards whether they have broken the build or
 not.
 The overall goal is to reduce tree breakage and provide a platform to run
 tests or code-quality checks that are too annoying or pedantic for any
 human to waste their time with.
 Developers get immediate (and potentially public) feedback about their
 changes, encouraging them to be more careful about testing before checkin.
\end_layout

\begin_layout Standard
The Buildbot was written to automate the human process of walking into the
 office, updating a tree, compiling (and discovering the breakage), finding
 the developer at fault, and complaining to them about the problem they
 had introduced.
 With multiple platforms it was difficult for developers to do the right
 thing (compile their potential change on all platforms); the buildbot offered
 a way to help.
\begin_inset CommandInset citation
LatexCommand citep
key "buildbot-introduction"

\end_inset


\end_layout

\begin_layout Subsection
Python
\end_layout

\begin_layout Standard
The bulk of Buildbot is written in 
\emph on
Python
\emph default
.
\end_layout

\begin_layout Standard

\emph on
Python
\emph default
 is a widely used high-level programming language for general-purpose programmin
g, created by Guido van Rossum and first released in 1991.
 It is an interpreted language, meaning that it executes its instructions
 directly and freely, without previously compiling a program into machine-langua
ge instructions.
 The interpreter executes the program directly, translating each statement
 into a sequence of one or more subroutines already compiled into machine
 code.
\end_layout

\begin_layout Standard

\emph on
Python
\emph default
 has a design philosophy that emphasizes code readability (notably using
 whitespace indentation to delimit code blocks rather than curly brackets
 or keywords), and a syntax that allows programmers to express concepts
 in fewer lines of code than might be used in languages such as 
\emph on
C++
\emph default
 or 
\emph on
Java
\emph default
.
\begin_inset CommandInset citation
LatexCommand cite
key "python-usage"

\end_inset

 
\emph on
Python
\emph default
 features a dynamic type system and automatic memory management.
 It supports multiple programming paradigms, including object-oriented,
 imperative, functional and procedural, and has a large and comprehensive
 standard library.
\begin_inset CommandInset citation
LatexCommand cite
key "python-about"

\end_inset

 Besides being present in the Buildbot backend, we will also encounter it
 when implementing custom web dashboards, and in 
\emph on
Angular
\emph default
 with 
\emph on
CoffeeScript
\emph default
, which is a language that cross-compiles to 
\emph on
JavaScript
\emph default
 and has Python-inspired syntax.
\end_layout

\begin_layout Standard
Since 2003, Python has consistently ranked in the top ten most popular programmi
ng languages in the TIOBE Programming Community Index.
\begin_inset Foot
status open

\begin_layout Plain Layout
A measure of popularity of programming languages, created and maintained
 by the TIOBE Company based in Eindhoven, Netherlands.
 TIOBE stands for 
\begin_inset Quotes eld
\end_inset

The Importance of Being Earnest
\begin_inset Quotes erd
\end_inset

, taken from the name of a comedy play written by Oscar Wilde at the end
 of the nineteenth century.
\end_layout

\end_inset

 As of November 2017, it is the fourth most popular language.
\begin_inset CommandInset citation
LatexCommand cite
key "python-popularity"

\end_inset


\end_layout

\begin_layout Standard
An empirical study found that scripting languages, such as Python, are more
 productive than conventional languages, such as C and Java, for programming
 problems involving string manipulation and search in a dictionary, and
 determined that memory consumption was often "better than Java and not
 much worse than C or C++
\begin_inset Quotes erd
\end_inset

.
\begin_inset CommandInset citation
LatexCommand cite
key "python-empirical-comparison"

\end_inset


\end_layout

\begin_layout Subsection
Twisted
\end_layout

\begin_layout Standard
The cornerstone of Buildbot is Twisted, an open-source, event-driven network
 programming framework written in Python and licensed under the MIT License.
\end_layout

\begin_layout Standard
Twisted supports many common transport and application layer protocols,
 including TCP, UDP, SSL/TLS, HTTP, IMAP, SSH, IRC, and FTP.
 Like the language in which is written, it is 
\begin_inset Quotes eld
\end_inset

batteries-included
\begin_inset Quotes erd
\end_inset

; Twisted comes with client and server implementations for all of its protocols,
 as well as utilities that make it easy to configure and deploy production-grade
 Twisted applications from the command line.
\end_layout

\begin_layout Standard
Twisted includes both high- and low-level tools for building performant,
 cross-platform applications.
 One can deploy a web or mail server with just a few lines of code, or one
 can write their own protocol from scratch.
 At every level, Twisted provides a tested, RFC-conforming, extensible API
 that makes it possible to rapidly develop powerful network software.
\begin_inset CommandInset citation
LatexCommand citep
key "twisted-intro"

\end_inset


\end_layout

\begin_layout Subsubsection
Protocol/transport separation
\end_layout

\begin_layout Standard
Twisted is designed for complete separation between logical protocols (usually
 relying on stream-based connection semantics, such as HTTP or POP3) and
 physical transport layers supporting such stream-based semantics (such
 as files, sockets or SSL libraries).
 Connection between a logical protocol and a transport layer happens at
 the last possible moment — just before information is passed into the logical
 protocol instance.
 The logical protocol is informed of the transport layer instance, and can
 use it to send messages back and to check for the peer's identity.
 Note that it is still possible, in protocol code, to deeply query the transport
 layer on transport issues (such as checking a client-side SSL certificate).
 Naturally, such protocol code will fail (raise an exception) if the transport
 layer does not support such semantics.
\end_layout

\begin_layout Subsubsection
The Deferred API
\end_layout

\begin_layout Standard
Central to the Twisted application model is the concept of a deferred (elsewhere
 called a future).
 A deferred is an instance of a class designed to receive and process a
 result which has not been computed yet, for example because it is based
 on data from a remote peer.
 Deferreds can be passed around, just like regular objects, but cannot be
 asked for their value.
 Each deferred supports a callback chain.
 When the deferred gets the value, it is passed to the functions on the
 callback chain, with the result of each callback becoming the input for
 the next.
 Deferreds make it possible to arrange to operate on the result of a function
 call before its value has become available.
\end_layout

\begin_layout Standard
For example, if a deferred returns a string from a remote peer containing
 an IP address in quad format, a callback can be attached to translate it
 into a 32-bit number.
 Any user of the deferred can now treat it as a deferred returning a 32-bit
 number.
 This, and the related ability to define "errbacks" (callbacks which are
 called as error handlers), allows code to specify in advance what to do
 when an asynchronous event occurs, without stopping to wait for the event.
 In non-event-driven systems, for example using threads, the operating system
 incurs premature and additional overhead organizing threads each time a
 blocking call is made.
\end_layout

\begin_layout Subsubsection
Thread support
\end_layout

\begin_layout Standard
Twisted supports an abstraction over raw threads — using a thread as a deferred
 source.
 Thus, a deferred is returned immediately, which will receive a value when
 the thread finishes.
 Callbacks can be attached which will run in the main thread, thus alleviating
 the need for complex locking solutions.
 A prime example of such usage, which comes from Twisted's support libraries,
 is using this model to call into databases.
 The database call itself happens on a foreign thread, but the analysis
 of the result happens in the main thread.
\begin_inset CommandInset citation
LatexCommand cite
key "twisted-ideas"

\end_inset


\end_layout

\begin_layout Subsubsection
Example: A TCP Echo Server and Client
\end_layout

\begin_layout Standard
A basic implementation for a simple TCP echo server and client pair can
 be seen below.
 The server's job is to listen for TCP connections on a particular port
 and echo back anything it receives.
 The client's job is to connect to the server, send it a message, receive
 a response, and terminate the connection.
\begin_inset CommandInset citation
LatexCommand citep
key "twisted-example"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/echoserver.py"
lstparams "breaklines=true,captionpos=b,frame=b,language=Python,basicstyle={{\\ttm}},otherkeywords={self},keywordstyle={{\\ttb\\color{deepblue}}},stringstyle={{\\color{deepgreen}}},showstringspaces=false,captionpos=b,caption={\\textit{echoserver.py}}"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/echoclient.py"
lstparams "breaklines=true,captionpos=b,frame=b,language=Python,basicstyle={{\\ttm}},otherkeywords={self},keywordstyle={{\\ttb\\color{deepblue}}},stringstyle={{\\color{deepgreen}}},showstringspaces=false,captionpos=b,caption={\\textit{echoclient.py}}"

\end_inset


\end_layout

\begin_layout Standard
To test the scripts, the server should be run in a first terminal using
 
\family typewriter
python echoserver.py
\family default
.
 This will start a TCP server listening for connections on port 8000.
 The client should be run in a second terminal with 
\family typewriter
python echoclient.py
\family default
.
\end_layout

\begin_layout Standard
A sample command sequence would be:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\ttm},otherkeywords={python echoclient.py},keywordstyle={\ttb},frame=b,captionpos=b"
inline false
status open

\begin_layout Plain Layout

$ python echoserver.py # in terminal 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$ python echoclient.py # in terminal 2
\end_layout

\begin_layout Plain Layout

Server said: Hello, world!
\end_layout

\begin_layout Plain Layout

Connection lost.
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
Command sequence example
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Database
\end_layout

\begin_layout Standard
As of version 0.8.0, Buildbot has used a database as part of its storage backend.
 All access to the Buildbot database is mediated by database connector classes.
 These classes provide a functional, asynchronous interface to other parts
 of Buildbot, and encapsulate the database-specific details in a single
 location in the codebase.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
The connectors all use 
\emph on
SQLAlchemy Core
\emph default
 to achieve (almost) database-independent operation.
 Note that the 
\emph on
SQLAlchemy ORM
\emph default
 is not used in Buildbot.
 Database queries are carried out in threads, and report their results back
 to the main thread via Twisted Deferreds.
 The database schema is maintained with 
\emph on
SQLAlchemy-Migrate
\emph default
.
 This package handles the details of upgrading users between different schema
 versions.
\begin_inset CommandInset citation
LatexCommand cite
key "buildbot-database"

\end_inset


\end_layout

\begin_layout Standard
In the default configuration Buildbot uses a file-based 
\emph on
SQLite
\emph default
 database, stored in the 
\family typewriter
state.sqlite
\family default
 file of the master’s base directory.
\begin_inset CommandInset citation
LatexCommand cite
key "buildbot-cfg"

\end_inset


\end_layout

\begin_layout Standard
SQLite is a relational database management system (DBMS) contained in a
 C programming library.
 In contrast to many other database management systems, SQLite is not a
 client–server database engine.
 Rather, it is embedded into the end program.
 SQLite is ACID-compliant
\begin_inset Foot
status open

\begin_layout Plain Layout
Acronym for 
\emph on
Atomicity, Consistency, Isolation, Durability
\emph default
.
 A set of properties of database transactions intended to guarantee validity
 even in the event of errors, power failures, etc.
\end_layout

\end_inset

 and implements most of the SQL standard, using a dynamically and weakly
 typed SQL syntax that does not guarantee the domain integrity.
\begin_inset CommandInset citation
LatexCommand cite
key "sqlite-apress"

\end_inset

 SQLite is a popular choice as embedded database software for local/client
 storage in application software such as web browsers.
 It is arguably the most widely deployed database engine, as it is used
 today by several widespread browsers, operating systems, and embedded systems
 (such as mobile phones), among others.
 SQLite has bindings to many programming languages, including Python.
 Among its most popular users are browsers like 
\emph on
Google Chrome, Safari 
\emph default
and 
\emph on
Mozilla Firefox 
\emph default
which stores a variety of configuration data (bookmarks, cookies, contacts
 etc.) inside internally managed SQLite databases.
\begin_inset CommandInset citation
LatexCommand cite
key "sqlite-deployed"

\end_inset


\end_layout

\begin_layout Standard
Although Buildbot's default database is SQLite, it also supports MySQL and
 PostgreSQL.
\end_layout

\begin_layout Section
Web interface
\end_layout

\begin_layout Standard
In previous releases, the web part of buildbot was implemented using a WebStatus
 plugin.
 That has since become deprecated, and as of Buildbot 0.9.0, the built-in
 web server supersedes it.
\end_layout

\begin_layout Standard
The client side of the web UI is written in JavaScript and based on the
 Angular framework and concepts.
\end_layout

\begin_layout Standard
Being a Single Page Application, all Buildbot pages are loaded from the
 same path, at the master's base URL.
 A JavaScript technique is used to avoid reloading the whole page over HTTP
 when the users changes the URI or clicks a link.
\end_layout

\begin_layout Subsection
Angular
\end_layout

\begin_layout Standard
Angular is a framework for building client applications in HTML and either
 JavaScript or a language like TypeScript that compiles to JavaScript (in
 Buildbot's case, CoffeeScript, because of its similarities to Python).
\begin_inset CommandInset citation
LatexCommand citep
key "angular-architecture"

\end_inset


\end_layout

\begin_layout Standard
The framework works by first reading the HTML page, which has additional
 custom tag attributes embedded into it.
 Angular interprets those attributes as directives to bind input or output
 parts of the page to a model that is represented by standard JavaScript
 variables.
 The values of those JavaScript variables can be manually set within the
 code, or retrieved from static or dynamic JSON resources.
\begin_inset CommandInset citation
LatexCommand citep
key "angular-how-it-works"

\end_inset


\end_layout

\begin_layout Standard
Angular is built around the belief that declarative code is better than
 imperative when it comes to building UIs and wiring software components
 together, while imperative code is excellent for expressing business logic.
\end_layout

\begin_layout Standard
Angular's design goals include:
\end_layout

\begin_layout Itemize
decoupling DOM manipulation from app logic, improving the testability of
 the code
\end_layout

\begin_layout Itemize
decoupling the client side of an application from the server side, allowing
 development work to progress in paralel
\end_layout

\begin_layout Itemize
providing guidance through the entire journey of building an app, from designing
 the UI, through writing the business logic, to testing
\end_layout

\begin_layout Itemize
making common tasks trivial and difficult tasks possible
\begin_inset CommandInset citation
LatexCommand citep
key "angular-introduction"

\end_inset


\end_layout

\begin_layout Subsection
NodeJS
\end_layout

\begin_layout Standard
Node.js (Node) is an open source development platform for executing JavaScript
 code server-side.
 Node is useful for developing applications that require a persistent connection
 from the browser to the server and is often used for real-time applications
 such as chat, news feeds and web push notifications.
\end_layout

\begin_layout Standard
Node.js is intended to run on a dedicated HTTP server and to employ a single
 thread with one process at a time.
 Node.js applications are event-based and run asynchronously.
 Code built on the Node platform does not follow the traditional model of
 receive, process, send, wait, receive.
 Instead, Node processes incoming requests in a constant event stack and
 sends small requests one after the other without waiting for responses.
\end_layout

\begin_layout Standard
This is a shift away from mainstream models that run larger, more complex
 processes and run several threads concurrently, with each thread waiting
 for its appropriate response before moving on.
\end_layout

\begin_layout Standard
One of the major advantages of Node.js, according to its creator Ryan Dahl,
 is that it does not block input/output (I/O).
 Some developers are highly critical of Node.js and point out that if a single
 process requires a significant number of CPU cycles, the application will
 block and that the blocking can crash the application.
 Proponents of the Node.js model claim that CPU processing time is less of
 a concern because of the high number of small processes that Node code
 is based on.
\begin_inset CommandInset citation
LatexCommand citep
key "node-whatis"

\end_inset


\end_layout

\begin_layout Subsection
npm
\end_layout

\begin_layout Standard

\emph on
npm
\emph default
 is a package manager for the JavaScript programming language.
 It is the default package manager for the JavaScript runtime environment
 
\emph on
Node.js
\emph default
.
 It consists of a command line client, also called 
\emph on
npm
\emph default
, and an online database of public and paid-for private packages, called
 the npm registry.
 The registry is accessed via the client, and the available packages can
 be browsed and searched via the npm website.
\end_layout

\begin_layout Standard

\emph on
npm
\emph default
 is included as a recommended feature in Node.js installer.
\begin_inset CommandInset citation
LatexCommand citep
key "npm-guide"

\end_inset

 npm consists of a command line client that interacts with a remote registry.
 It allows users to consume and distribute JavaScript modules that are available
 on the registry.
\begin_inset CommandInset citation
LatexCommand citep
key "npm-ampersand"

\end_inset

 Packages on the registry are in CommonJS format and include a metadata
 file in JSON format.
\begin_inset CommandInset citation
LatexCommand citep
key "npm-security"

\end_inset

 Over 477,000 packages are available on the main npm registry.
\begin_inset CommandInset citation
LatexCommand citep
key "npm-understanding"

\end_inset

 The registry has no vetting process for submission, which means that packages
 found there can be low quality, insecure, or malicious.
\begin_inset CommandInset citation
LatexCommand citep
key "npm-security"

\end_inset

 Instead, npm relies on user reports to take down packages if they violate
 policies by being insecure, malicious or low quality.
\begin_inset CommandInset citation
LatexCommand citep
key "npm-conduct"

\end_inset

 npm exposes statistics including number of downloads and number of depending
 packages to assist developers in judging the quality of packages.
\begin_inset CommandInset citation
LatexCommand citep
key "npm-stat"

\end_inset


\end_layout

\begin_layout Standard

\emph on
npm
\emph default
 can manage packages that are local dependencies of a particular project,
 as well as globally-installed JavaScript tools.
\begin_inset CommandInset citation
LatexCommand citep
key "npm-manage"

\end_inset

 When used as a dependency manager for a local project, npm can install,
 in one command, all the dependencies of a project through the 
\family typewriter
package.json
\family default
 file.
\begin_inset CommandInset citation
LatexCommand citep
key "npm-install"

\end_inset

 In the package.json file, each dependency can specify a range of valid versions
 using the semantic versioning scheme, allowing developers to auto-update
 their packages while at the same time avoiding unwanted breaking changes.
\begin_inset CommandInset citation
LatexCommand citep
key "npm-semver"

\end_inset

 npm also provides version-bumping tools for developers to tag their packages
 with a particular version.
\begin_inset CommandInset citation
LatexCommand citep
key "npm-version"

\end_inset


\end_layout

\begin_layout Standard
There are a number of alternatives to 
\emph on
npm
\emph default
 for installing modular JavaScript, most popular of which is 
\emph on
Yarn
\emph default
, which was open-sourced by Facebook in October 2016.
\begin_inset CommandInset citation
LatexCommand citep
key "npm-yarn"

\end_inset

 One of the main reasons for this development was that 
\emph on
npm
\emph default
 broke down on Facebook's continuous integration environments, due to sandboxing
 and no internet access.
 Yarn replaces the existing workflow for the npm client while remaining
 compatible with the npm registry.
\end_layout

\begin_layout Standard
In the Node ecosystem, dependencies get placed within a 
\family typewriter
node_modules
\family default
 directory in your project.
 However, this file structure can differ from the actual dependency tree
 as duplicate dependencies are merged together.
 The npm client installs dependencies into the 
\family typewriter
node_modules
\family default
 directory non-deterministically.
 This means that based on the order dependencies are installed, the structure
 of a 
\family typewriter
node_modules
\family default
 directory could be different from one person to another.
 These differences can cause “works on my machine” bugs that take a long
 time to hunt down.
\end_layout

\begin_layout Standard
Yarn resolves these issues around versioning and non-determinism by using
 lockfiles and an install algorithm that is deterministic and reliable.
 These lockfiles lock the installed dependencies to a specific version,
 and ensure that every install results in the exact same file structure
 in 
\family typewriter
node_modules
\family default
 across all machines.
 The written lockfile uses a concise format with ordered keys to ensure
 that changes are minimal and review is simple.
\begin_inset CommandInset citation
LatexCommand citep
key "npm-facebook"

\end_inset


\end_layout

\begin_layout Subsection
Gulp
\end_layout

\begin_layout Standard

\emph on
gulp.js
\emph default
 is an open-source JavaScript toolkit by Fractal Innovations and the open
 source community at GitHub, used as a streaming build system in front-end
 web development.
\begin_inset CommandInset citation
LatexCommand citep
key "gulp-whatis"

\end_inset


\end_layout

\begin_layout Standard
It is a task runner built on 
\emph on
Node.js
\emph default
 and 
\emph on
npm
\emph default
, used for automation of time-consuming and repetitive tasks involved in
 web development like minification, concatenation, cache busting, unit testing,
 linting, optimization, etc.
\begin_inset CommandInset citation
LatexCommand citep
key "gulp-building"

\end_inset


\end_layout

\begin_layout Standard

\emph on
gulp
\emph default
 is a build tool in JavaScript built on node streams.
 These streams facilitate the connection of file operations through pipelines.
\begin_inset CommandInset citation
LatexCommand citep
key "gulp-pipelines"

\end_inset

 gulp reads the file system and pipes the data at hand from its one single-purpo
sed plugin to other through the .pipe() operator, doing one task at a time.
 The original files are not affected until all the plugins are processed.
 It can be configured either to modify the original files or to create new
 ones.
 This grants the ability to perform complex tasks through linking its numerous
 plugins.
 The users can also write their own plugins to define their own tasks.
\begin_inset CommandInset citation
LatexCommand citep
key "gulp-readme"

\end_inset

 Unlike other task runners that run tasks by configuration, gulp requires
 knowledge of JavaScript and coding to define its tasks.
 gulp is a build system which means apart from running tasks, it is also
 capable of copying files from one location to another, compiling, deploying,
 creating notifications, unit testing, linting, etc.
\begin_inset CommandInset citation
LatexCommand citep
key "gulp-whatis"

\end_inset


\end_layout

\begin_layout Standard
Task-runners like gulp and grunt are built on Node.js rather than npm, because
 the basic npm scripts are inefficient when executing multiple tasks.
 Even though some developers prefer npm scripts because they can be simple
 and easy to implement, there are numerous ways where gulp and grunt seem
 to have an advantage over each other and the default provided scripts.
\begin_inset CommandInset citation
LatexCommand citep
key "gulp-cli"

\end_inset

 Grunt runs tasks by transforming files and saves as new ones in temporary
 folders and the output of one task is taken as input for another and so
 on until the output reaches the destination folder.
 This involves a lot of I/O calls and creation of many temporary files.
 Whereas gulp streams through the file system and does not require any of
 these temporary locations decreasing the number of I/O calls thus, improving
 performance.
\begin_inset CommandInset citation
LatexCommand citep
key "gulp-performance"

\end_inset

 Grunt uses configuration files to perform tasks whereas gulp requires its
 build file to be coded.
 In grunt, each plugin needs to be configured to match its input location
 to the previous plugin’s output.
 In gulp, the plugins are automatically pipe-lined.
\begin_inset CommandInset citation
LatexCommand citep
key "gulp-pipelines"

\end_inset


\end_layout

\begin_layout Standard
The gulp tasks are run from a 
\series bold
Command Line Interface
\series default
 (CLI)
\begin_inset CommandInset citation
LatexCommand citep
key "gulp-cli"

\end_inset

 shell and require 
\family typewriter
package.json
\family default
 and 
\family typewriter
gulpfile.js
\family default
 (simply gulpfile) in the project root directory.
 The gulpfile is where plugins are loaded and tasks are defined.
 First, all the necessary modules are loaded and then tasks are defined
 in the gulpfile.
 All the necessary plugins specified in the gulpfile are installed into
 the devDependencies.
\begin_inset CommandInset citation
LatexCommand citep
key "npm-install"

\end_inset

 The default task is run with 
\family typewriter
gulp
\family default
.
 Individual tasks can be defined by gulp.task and are run by 
\family typewriter
gulp <task> <othertask>
\family default
.
\begin_inset CommandInset citation
LatexCommand citep
key "gulp-start"

\end_inset

 Complex tasks are defined by chaining the plugins with the help of the
 
\family typewriter
.pipe()
\family default
 operator.
\begin_inset CommandInset citation
LatexCommand citep
key "gulp-book"

\end_inset


\end_layout

\begin_layout Subsection
CoffeeScript
\end_layout

\begin_layout Standard

\emph on
CoffeeScript
\emph default
 is a programming language that transcompiles to 
\emph on
JavaScript
\emph default
.
 It adds syntactic sugar inspired by Ruby, Python and Haskell in an effort
 to enhance JavaScript's brevity and readability.
\begin_inset CommandInset citation
LatexCommand citep
key "coffeescript-book"

\end_inset

 Specific additional features include list comprehension and pattern matching.
\end_layout

\begin_layout Standard
Almost everything is an expression in CoffeeScript, for example 
\family typewriter
if
\family default
, 
\family typewriter
switch
\family default
 and 
\family typewriter
for
\family default
 expressions (which have no return value in JavaScript) return a value.
 As in Perl, these control statements also have postfix versions; for example,
 
\family typewriter
if
\family default
 can also be written after the conditional statement.
\end_layout

\begin_layout Standard
Many unnecessary parentheses and braces can be omitted; for example, blocks
 of code can be denoted by indentation instead of braces, function calls
 are implicit, and object literals are often detected automatically.
\end_layout

\begin_layout Standard

\emph on
CoffeeScript
\emph default
 was chosen for Buildbot development because of its familiarities with Python.
 As most of its developers are Python experts, they found it helpful to
 code the frontend using a similar syntax as the backend.
\begin_inset CommandInset citation
LatexCommand citep
key "coffeescript-style"

\end_inset


\end_layout

\begin_layout Standard
As of December 2017, switching the buildbot frontend codebase from CoffeeScript
 to TypeScript or another more-modern language is being considered.
\begin_inset CommandInset citation
LatexCommand citep
key "coffeescript-switch"

\end_inset


\end_layout

\begin_layout Subsubsection
Code snippets
\end_layout

\begin_layout Standard
To compute the greatest common divisor of two integers using the euclidean
 algorithm, in JavaScript one usually needs a 
\family typewriter
while
\family default
 loop:
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/loop.js"
lstparams "breaklines=true,captionpos=b,frame=b,basicstyle={{\\ttm\\ttfamily}},otherkeywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break},keywordstyle={{\\ttb\\color{deepblue}}},stringstyle={{\\color{deepgreen}}},showstringspaces=false,captionpos=b,caption={\\textit{loop.js}}"

\end_inset


\end_layout

\begin_layout Standard
Whereas in CoffeeScript one can use 
\family typewriter
until
\family default
 and pattern-matching instead:
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/loop.coffee"
lstparams "breaklines=true,captionpos=b,frame=b,basicstyle={{\\ttm\\ttfamily}},otherkeywords={until},keywordstyle={{\\ttb\\color{deepblue}}},stringstyle={{\\color{deepgreen}}},showstringspaces=false,captionpos=b,caption={\\textit{loop.coffee}}"

\end_inset


\end_layout

\begin_layout Standard
A linear search can be implemented in one line using the 
\family typewriter
when
\family default
 keyword:
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/linearSearch.coffee"
lstparams "breaklines=true,captionpos=b,frame=b,basicstyle={{\\ttm\\ttfamily}},otherkeywords={until, for, in, when},keywordstyle={{\\ttb\\color{deepblue}}},stringstyle={\\color{red}\\ttfamily},showstringspaces=false,captionpos=b,comment={[l]{\\#}},commentstyle={\\color{deepgreen}\\ttfamily},morestring={[b]\"},caption={\\textit{linearSearch.coffee}}"

\end_inset


\end_layout

\begin_layout Standard
Ruby-style string interpolation is included in CoffeeScript.
 Double-quoted strings allow for interpolated values using 
\family typewriter
#{...}
\family default
 and single-quoted strings are treated as literals:
\begin_inset CommandInset citation
LatexCommand citep
key "coffeescript-interpolation"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/interpolation.coffee"
lstparams "breaklines=true,captionpos=b,frame=b,basicstyle={{\\ttm\\ttfamily}},otherkeywords={until, for, in, when},keywordstyle={{\\ttb\\color{deepblue}}},stringstyle={\\color{red}\\ttfamily},showstringspaces=false,captionpos=b,comment={[l]{\\#}},commentstyle={\\color{deepgreen}\\ttfamily\\textit},morestring={[b]\"},caption={\\textit{interpolation.coffee}}"

\end_inset


\end_layout

\begin_layout Standard
CoffeeScript allows us to chain two comparisons together in a form that
 more closely matches the way a mathematician would write it:
\begin_inset CommandInset citation
LatexCommand citep
key "coffeescript-ranges"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/comparingRanges.coffee"
lstparams "breaklines=true,captionpos=b,frame=b,basicstyle={{\\ttm\\ttfamily}},otherkeywords={until, for, in, when},keywordstyle={{\\ttb\\color{deepblue}}},stringstyle={\\color{red}\\ttfamily},showstringspaces=false,captionpos=b,comment={[l]{\\#}},commentstyle={\\color{deepgreen}\\ttfamily\\textit},morestring={[b]\"},caption={\\textit{comparingRanges.coffee}}"

\end_inset


\end_layout

\begin_layout Standard
A simple way to integrate small snippets of JavaScript code into a CoffeeScript
 codebase, without converting its syntax would be to wrap the JavaScript
 with backticks:
\begin_inset CommandInset citation
LatexCommand citep
key "coffeescript-embed"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/embedJS.coffee"
lstparams "breaklines=true,captionpos=b,frame=b,basicstyle={{\\ttm\\ttfamily}},otherkeywords={until, for, in, when},keywordstyle={{\\ttb\\color{deepblue}}},stringstyle={\\color{red}\\ttfamily},showstringspaces=false,captionpos=b,comment={[l]{\\#}},commentstyle={\\color{deepgreen}\\ttfamily\\textit},morestring={[b]\"},caption={\\textit{embedJS.coffee}}"

\end_inset


\end_layout

\begin_layout Subsection
pug
\end_layout

\begin_layout Standard
Formerly known as Jade (a registered trademark, and as a result a rename
 was needed), 
\emph on
pug
\emph default
 is a high performance and feature-rich templating engine.
 Simply put, 
\emph on
pug 
\emph default
is a clean, whitespace/indentation sensitive syntax for simplifying and
 escaping the archaic syntax of HTML.
\end_layout

\begin_layout Standard
Just like SASS, Pug is a prepocessor and, as such it facilitates accomplishing
 tasks like wrapping away repetitive work by providing features not available
 in plain HTML.
 It provides the ability to write dynamic and reusable HTML documents, it's
 an open source HTML templating language for Node.js (server-side JavaScript),
 totally free to use and provides fast and easy HTML.
\begin_inset CommandInset citation
LatexCommand citep
key "pug-starting"

\end_inset


\end_layout

\begin_layout Standard
A basic syntax comparison can be seen below:
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/example.html"
lstparams "breaklines=true,captionpos=b,frame=b,language=HTML,basicstyle={{\\ttm\\ttfamily}},keywordstyle={\\color{blue}},stringstyle={\\color{red}},stringstyle={\\color{red}\\ttfamily},showstringspaces=false,captionpos=b,comment={[l]{\\#}},otherkeywords={header, section, footer},commentstyle={\\color{deepgreen}\\ttfamily\\textit},morestring={[b]\"},caption={\\textit{example.html}}"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/example.pug"
lstparams "breaklines=true,captionpos=b,frame=b,basicstyle={{\\ttm\\ttfamily}},keywordstyle={\\color{blue}},stringstyle={\\color{red}},stringstyle={\\color{red}\\ttfamily},showstringspaces=false,captionpos=b,comment={[l]{\\#}},otherkeywords={html, head, body, header, section, footer},commentstyle={\\color{deepgreen}\\ttfamily\\textit},morestring={[b]\"},caption={\\textit{example.pug}}"

\end_inset


\end_layout

\begin_layout Chapter
Default implementations
\end_layout

\begin_layout Section
Concepts and terminology
\end_layout

\begin_layout Standard
In its 15 years of existence, buildbot has defined some basic concepts that
 need to be understanded if one wants to configure and extend it.
\end_layout

\begin_layout Subsection
Source Stamps
\end_layout

\begin_layout Standard
Source code comes from repositories, provided by version control systems.
 Repositories are generally identified by URLs, e.g., 
\family typewriter
git://github.com/buildbot/buildbot.git
\family default
.
\end_layout

\begin_layout Standard
In these days of distributed version control systems, the same 
\emph on
codebase
\emph default
 may appear in multiple repositories.
 For example, 
\family typewriter
https://github.com/mozilla/mozilla-central
\family default
 and 
\family typewriter
http://hg.mozilla.org/mozilla-release
\family default
 both contain the Firefox codebase, although not exactly the same code.
\end_layout

\begin_layout Standard
Many 
\emph on
projects
\emph default
 are built from multiple codebases.
 For example, a company may build several applications based on the same
 core library.
 The “app” codebase and the “core” codebase are in separate repositories,
 but are compiled together and constitute a single project.
 Changes to either codebase should cause a rebuild of the application.
\end_layout

\begin_layout Standard
Most version control systems define some sort of 
\emph on
revision
\emph default
 that can be used (sometimes in combination with a 
\emph on
branch
\emph default
) to uniquely specify a particular version of the source code.
\end_layout

\begin_layout Standard
To build a project, Buildbot needs to know exactly which version of each
 codebase it should build.
 It uses a 
\emph on
source stamp
\emph default
 to do so for each codebase; the collection of sourcestamps required for
 a project is called a 
\emph on
source stamp set
\emph default
.
\begin_inset CommandInset citation
LatexCommand citep
key "concepts-sourcestamp"

\end_inset


\end_layout

\begin_layout Subsection
Changes
\end_layout

\begin_layout Subsubsection
Who
\end_layout

\begin_layout Standard
Each 
\family typewriter
\series bold
Change
\family default
\series default
 has a 
\family typewriter
\series bold
who
\family default
\series default
 attribute, which specifies which developer is responsible for the change.
 This is a string which comes from a namespace controlled by the VC repository.
 Frequently this means it is a username on the host which runs the repository,
 but not all VC systems require this.
 Each 
\family typewriter
\series bold
StatusNotifier
\family default
\series default
 will map the 
\family typewriter
\series bold
who
\family default
\series default
 attribute into something appropriate for their particular means of communicatio
n: an email address, an IRC handle, etc.
\begin_inset CommandInset citation
LatexCommand citep
key "concepts-who"

\end_inset


\end_layout

\begin_layout Subsubsection
Files
\end_layout

\begin_layout Standard
It also has a list of 
\family typewriter
\series bold
files
\family default
\series default
, which are just the tree-relative filenames of any files that were added,
 deleted, or modified for this 
\family typewriter
\series bold
Change
\family default
\series default
.
 These filenames are used by the 
\family typewriter
\series bold
fileIsImportant
\family default
\series default
 function (in the scheduler) to decide whether it is worth triggering a
 new build or not, e.g.
 the function could use the following function to only run a build if a
 C file were checked in:
\begin_inset CommandInset citation
LatexCommand citep
key "concepts-files"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "code/has_C_files.py"
lstparams "breaklines=true,captionpos=b,frame=b,language=Python,basicstyle={{\\ttm}},otherkeywords={self},keywordstyle={{\\ttb\\color{deepblue}}},stringstyle={{\\color{deepgreen}}},showstringspaces=false,captionpos=b,caption={\\textit{has\\_C\\_files.py}}"

\end_inset


\end_layout

\begin_layout Subsubsection
Comments
\end_layout

\begin_layout Standard
The Change also has a 
\family typewriter
\series bold
comments
\family default
\series default
 attribute, which is a string containing any checkin comments.
\begin_inset CommandInset citation
LatexCommand citep
key "concepts-comments"

\end_inset


\end_layout

\begin_layout Subsubsection
Project
\end_layout

\begin_layout Standard
The 
\family typewriter
\series bold
project
\family default
\series default
 attribute of a change or source stamp describes the project to which it
 corresponds, as a short human-readable string.
 This is useful in cases where multiple independent projects are built on
 the same buildmaster.
 In such cases, it can be used to control which builds are scheduled for
 a given commit, and to limit status displays to only one project.
\begin_inset CommandInset citation
LatexCommand citep
key "concepts-project"

\end_inset


\end_layout

\begin_layout Subsubsection
Repository
\end_layout

\begin_layout Standard
This attribute specifies the repository in which this change occurred.
 In the case of DVCS’s, this information may be required to check out the
 committed source code.
 However, using the repository from a change has security risks: if Buildbot
 is configured to blindly trust this information, then it may easily be
 tricked into building arbitrary source code, potentially compromising the
 workers and the integrity of subsequent builds.
\begin_inset CommandInset citation
LatexCommand citep
key "concepts-repository"

\end_inset


\end_layout

\begin_layout Subsubsection
Codebase
\end_layout

\begin_layout Standard
This attribute specifies the codebase to which this change was made.
 As described in the Source Stamps section, multiple repositories may contain
 the same codebase.
 A change’s codebase is usually determined by the 
\family typewriter
\series bold
codebaseGenerator
\family default
\series default
 configuration.
 By default the codebase is ‘’ (empty); this value is used automatically
 for single-codebase configurations.
\begin_inset CommandInset citation
LatexCommand citep
key "concepts-codebase"

\end_inset


\end_layout

\begin_layout Subsubsection
Revision
\end_layout

\begin_layout Standard
Each Change can have a 
\family typewriter
\series bold
revision
\family default
\series default
 attribute, which describes how to get a tree with a specific state: a tree
 which includes this Change (and all that came before it) but none that
 come after it.
 If this information is unavailable, the 
\family typewriter
\series bold
revision
\family default
\series default
 attribute will be 
\family typewriter
None
\family default
.
 These revisions are provided by the 
\family typewriter
\series bold
ChangeSource
\family default
\series default
.
\end_layout

\begin_layout Standard
Revisions are always strings.
\begin_inset CommandInset citation
LatexCommand citep
key "concepts-revision"

\end_inset


\end_layout

\begin_layout Subsubsection
Branches
\end_layout

\begin_layout Standard
The Change might also have a 
\family typewriter
\series bold
branch
\family default
\series default
 attribute.
 This indicates that all of the Change’s files are in the same named branch.
 The schedulers get to decide whether the branch should be built or not.
\begin_inset CommandInset citation
LatexCommand citep
key "concepts-branches"

\end_inset


\end_layout

\begin_layout Subsubsection
Change Properties
\end_layout

\begin_layout Standard
A Change may have one or more properties attached to it, usually specified
 through the Force Build form or 
\family typewriter
\series bold
sendchange
\family default
\series default
.
 These are useful for custom buildbot implementations.
\begin_inset CommandInset citation
LatexCommand citep
key "concepts-changeproperties"

\end_inset


\end_layout

\begin_layout Subsection
BuildSets
\end_layout

\begin_layout Subsection
BuildRequests
\end_layout

\begin_layout Subsection
Builders
\end_layout

\begin_layout Subsection
Schedulers
\end_layout

\begin_layout Subsection
Builds
\end_layout

\begin_layout Subsection
Master
\end_layout

\begin_layout Subsection
Workers
\end_layout

\begin_layout Subsection
Users
\end_layout

\begin_layout Subsection
Data API
\end_layout

\begin_layout Section
Web interface
\end_layout

\begin_layout Subsection
Home page
\end_layout

\begin_layout Subsection
Grid view
\end_layout

\begin_layout Subsection
Waterfall view
\end_layout

\begin_layout Subsection
Console view
\end_layout

\begin_layout Subsection
Settings
\end_layout

\begin_layout Chapter
Custom implementations
\end_layout

\begin_layout Section
Backend componentization
\end_layout

\begin_layout Standard
split master configuration into multiple modules to facilitate scalability
\end_layout

\begin_layout Subsection
Email look-up using LDAP
\end_layout

\begin_layout Subsection
Log parsing
\end_layout

\begin_layout Subsection
Preferential build steps
\end_layout

\begin_layout Section
Web interface development
\end_layout

\begin_layout Subsection
Flask/WSGI dashboards
\end_layout

\begin_layout Standard
pros/cons
\end_layout

\begin_layout Subsection
Angular dashboards
\end_layout

\begin_layout Standard
pros/cons
\end_layout

\begin_layout Section
User scripts
\end_layout

\begin_layout Standard
user try scripts to send patches with uncomitted code to buildbot for testing
\end_layout

\begin_layout Section
Extending the source code
\end_layout

\begin_layout Standard
extending buildbot source to allow multiple patchfiles and more API entrypoints
 maybe?
\end_layout

\begin_layout Chapter
Conclusion
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "python-usage"

\end_inset


\size normal

\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

McConnell, Steve, Code Complete, Microsoft Press, 2009, p.
 100
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "python-about"

\end_inset


\size normal

\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

About Python, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.python.org/about/
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "python-popularity"

\end_inset


\size normal

\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

TIOBE Index for November 2017, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.tiobe.com/tiobe-index/
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "python-empirical-comparison"

\end_inset


\size normal

\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

Prechelt, Lutz, An empirical comparison of C, C++, Java, Perl, Python, Rexx,
 and TCL, Fakultät für Informatik, Universität Karlsruhe, 2000
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "twisted-intro"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

McKellar, J.
 and Fettig, A., Twisted Network Programming Essentials, O'Reilly Media,
 2013, p.
 xiii
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "twisted-example"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

McKellar, J.
 and Fettig, A., Twisted Network Programming Essentials, O'Reilly Media,
 2013, p.
 11
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "twisted-ideas"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

Twisted Framework: Core ideas, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://en.wikipedia.org/w/index.php?title=Twisted_(software)&oldid=808304626
 
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography

\size normal
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "sqlite-apress"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

Owens, Michael, The Definitive Guide to SQLite, Apress, 2014, p.
 133
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography

\size normal
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "sqlite-deployed"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

Most Widely Deployed SQL Database Engine, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://sqlite.org/mostdeployed.html
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "buildbot-introduction"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Introduction - Buildbot latest documentation, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.buildbot.net/current/manual/introduction.html
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography

\size normal
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "buildbot-database"

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Database - Buildbot latest documentation, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.buildbot.net/latest/developer/database.html
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "buildbot-cfg"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Global Configuration - Buildbot latest documentation, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.buildbot.net/latest/manual/cfg-global.html
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "angular-architecture"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Angular - Architecture Overview, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://angular.io/guide/architecture
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "angular-how-it-works"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

AngularJS - Wikipedia, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://en.wikipedia.org/w/index.php?title=AngularJS&oldid=812169171
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "angular-introduction"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

AngularJS: Developer Guide: Introduction, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://docs.angularjs.org/guide/introduction
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "node-whatis"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

What is Node.js? - Definition from WhatIs.com, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://whatis.techtarget.com/definition/Nodejs
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "npm-guide"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

A Beginner's Guide to npm - the Node Package Manager, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.sitepoint.com/beginners-guide-node-package-manager
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "npm-ampersand"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Ampersand.js - Learn, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://ampersandjs.com/learn/npm-browserify-and-modules
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "npm-security"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Ojamaa, Andres; Duuna, Karl, Assessing the Security of Node.js Platform,
 URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6470829
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "npm-understanding"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Understanding npm, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://unpm.nodesource.com
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "npm-conduct"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

npm Code of Conduct: acceptable package content, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.npmjs.com/policies/conduct
\backslash
#acceptable-package-content
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "npm-stat"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

npm-stat: download statistics for NPM packages, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://npm-stat.com
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "npm-manage"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

How To Use npm to Manage Node.js Packages on a Linux Server, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.digitalocean.com/community/tutorials/how-to-use-npm-to-manage-node-js-
packages-on-a-linux-server
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "npm-install"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

npm-install, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://docs.npmjs.com/cli/install
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "npm-semver"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

semver, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://docs.npmjs.com/misc/semver
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "npm-version"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

npm-version, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://docs.npmjs.com/cli/version
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "npm-yarn"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

The npm Blog - Hello, Yarn!, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://blog.npmjs.org/post/151660845210/hello-yarn
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "npm-facebook"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Yarn: A new package manager for JavaScript | Engineering Blog | Facebook
 Code, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://code.facebook.com/posts/1840075619545360/yarn-a-new-package-manager-for-ja
vascript
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "gulp-whatis"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Mao, Jed; Schmitt, Maximilian; Stryjewski, Tomasz; Country Holt, Cary; Lubelski,
 Wiliam, Developing a Gulp Edge (1st ed.), Bleeding Edge Press, 2014
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "gulp-pipelines"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

substack/stream-handbook: how to write note programs with streams, URL:
 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/substack/stream-handbook
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "gulp-readme"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

gulpjs/gulp: Writing a plugin, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/gulpjs/gulp/blob/master/docs/writing-a-plugin/README.md
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "gulp-building"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Building With Gulp - Smashing Magazine, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.smashingmagazine.com/2014/06/building-with-gulp
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "gulp-cli"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

gulpjs/gulp: gulp CLI docs, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/gulpjs/gulp/blob/master/docs/CLI.md
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "gulp-performance"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Gulp for Beginners, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://css-tricks.com/gulp-for-beginners
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "gulp-start"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

gulpjs/gulp: Getting Started, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/gulpjs/gulp/blob/master/docs/getting-started.md
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "gulp-book"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Maynard, Travis, Getting Started with Gulp, Packt Publishing Ltd., 2015
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "coffeescript-book"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

MacCaw, Alex, The Little Book on CoffeeScript (1st ed.), O'Reilly Media,
 2012
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "coffeescript-interpolation"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

CoffeeScript Cookbook - String Interpolation, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://coffeescript-cookbook.github.io/chapters/strings/interpolation
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "coffeescript-ranges"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

CoffeeScript Cookbook - Comparing Ranges, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://coffeescript-cookbook.github.io/chapters/syntax/comparing_ranges
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "coffeescript-embed"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

CoffeeScript Cookbook - Embedding JavaScript, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://coffeescript-cookbook.github.io/chapters/syntax/embedding_javascript
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "coffeescript-switch"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

coffeescript -> javascript ES6 (ES2015) ? · Issue 
\backslash
#3804 · buildbot/buildbot - Embedding JavaScript, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/buildbot/buildbot/issues/3804
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "coffeescript-style"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

CoffeeScript Coding Style - Buildbot latest documentation, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.buildbot.net/latest/developer/coffeescript-style.html
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "pug-starting"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Getting started with Pug template engine - Codeburst, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://codeburst.io/getting-started-with-pug-template-engine-e49cfa291e33
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "concepts-sourcestamp"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Concepts - Buildbot latest documentation: Source Stamps, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.buildbot.net/latest/manual/concepts.html
\backslash
#source-stamps
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "concepts-who"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Concepts - Buildbot latest documentation: Who, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.buildbot.net/latest/manual/concepts.html
\backslash
#who
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "concepts-files"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Concepts - Buildbot latest documentation: Files, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.buildbot.net/latest/manual/concepts.html
\backslash
#files
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "concepts-comments"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Concepts - Buildbot latest documentation: Comments, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.buildbot.net/latest/manual/concepts.html
\backslash
#comments
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "concepts-project"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Concepts - Buildbot latest documentation: Project, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.buildbot.net/latest/manual/concepts.html
\backslash
#project
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "concepts-repository"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Concepts - Buildbot latest documentation: Repository, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.buildbot.net/latest/manual/concepts.html
\backslash
#repository
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "concepts-codebase"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Concepts - Buildbot latest documentation: Codebase, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.buildbot.net/latest/manual/concepts.html
\backslash
#codebase
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "concepts-revision"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Concepts - Buildbot latest documentation: Revision, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.buildbot.net/latest/manual/concepts.html
\backslash
#revision
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "concepts-changeproperties"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Concepts - Buildbot latest documentation: Change Properties, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.buildbot.net/latest/manual/concepts.html
\backslash
#change-properties
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "concepts-branches"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Concepts - Buildbot latest documentation: Branches, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.buildbot.net/latest/manual/concepts.html
\backslash
#branches
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "concepts-who-5"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Concepts - Buildbot latest documentation: Source Stamps, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.buildbot.net/latest/manual/concepts.html
\backslash
#source-stamps
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "concepts-who-6"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Concepts - Buildbot latest documentation: Source Stamps, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.buildbot.net/latest/manual/concepts.html
\backslash
#source-stamps
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "concepts-who-7"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Concepts - Buildbot latest documentation: Source Stamps, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.buildbot.net/latest/manual/concepts.html
\backslash
#source-stamps
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
