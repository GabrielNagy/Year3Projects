#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass report
\begin_preamble
\usepackage{amsthm}%% \usepackage[romanian]{babel}
\usepackage{graphicx}
%\usepackage{...insert other packages here...}
\usepackage{indentfirst}
\newtheorem{thm}{Teorema}[section]
\newtheorem{lem}[thm]{Lema}\newtheorem{cor}[thm]{Corolarul}\newtheorem{prop}[thm]{Propozi\c tia}\theoremstyle{definition}
\newtheorem{defn}{Defini\c tia}[section]
\theoremstyle{remark}
\newtheorem{rem}{Remarca}[section]
\newtheorem{exmp}{Exemplul}[section]
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding auto
\fontencoding default
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_bookmarks false
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref section
\pdf_pdfusetitle false
\papersize a4paper
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.2in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h!
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset VSpace -20pt
\end_inset

 
\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename FMI-03.png
	lyxscale 5
	width 100pt

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
\size large
WEST UNIVERSITY OF TIMIȘOARA
\end_layout

\begin_layout Standard
\align center

\series bold
\size large
FACULTY OF MATHEMATICS AND COMPUTER SCIENCE
\end_layout

\begin_layout Standard
\align center

\series bold
\size large
STUDY PROGRAM: COMPUTER SCIENCE IN ENGLISH
\end_layout

\begin_layout Standard
\align center
\begin_inset VSpace 120pt
\end_inset


\series bold
\size huge
BACHELOR THESIS
\end_layout

\begin_layout Standard
\align center
\begin_inset VSpace 160pt
\end_inset

 
\end_layout

\begin_layout Standard

\series bold
\size large
COORDINATOR:
\begin_inset space \hspace{}
\length 140pt
\end_inset

 GRADUATE:
\end_layout

\begin_layout Standard
\noindent

\size large
Lect.Univ.Dr.Stelian Mihalaș
\begin_inset space \hspace{}
\length 73pt
\end_inset

 Nagy Gabriel Alexandru
\end_layout

\begin_layout Standard
\begin_inset VSpace 100pt
\end_inset

 
\end_layout

\begin_layout Standard
\align center

\series bold
TIMIŞOARA
\end_layout

\begin_layout Standard
\align center

\series bold
2018
\series default
 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\align center

\series bold
\size large
WEST UNIVERSITY OF TIMIȘOARA
\end_layout

\begin_layout Standard
\align center

\series bold
\size large
FACULTY OF MATHEMATICS AND COMPUTER SCIENCE
\end_layout

\begin_layout Standard
\align center

\series bold
\size large
STUDY PROGRAM: COMPUTER SCIENCE IN ENGLISH
\end_layout

\begin_layout Standard
\align center
\begin_inset VSpace 200pt
\end_inset

 
\series bold
\size huge
CONTINUOUS INTEGRATION
\end_layout

\begin_layout Standard
\align center

\series bold
\size huge
WITH BUILDBOT 
\series default
\size default

\begin_inset ERT
status open

\begin_layout Plain Layout

% Inserati titlul aici!
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset VSpace 153pt
\end_inset

 
\end_layout

\begin_layout Standard

\series bold
\size large
COORDINATOR:
\begin_inset space \hspace{}
\length 140pt
\end_inset

 GRADUATE:
\end_layout

\begin_layout Standard
\noindent

\size large
Lect.Univ.Dr.Stelian Mihalaș
\begin_inset space \hspace{}
\length 73pt
\end_inset

 Nagy Gabriel Alexandru
\end_layout

\begin_layout Standard
\begin_inset VSpace 100pt
\end_inset

 
\end_layout

\begin_layout Standard
\align center

\series bold
TIMIŞOARA
\end_layout

\begin_layout Standard
\align center

\series bold
2018
\series default
 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\size normal

\begin_inset ERT
status open

\begin_layout Plain Layout

{}
\end_layout

\end_inset

 
\end_layout

\begin_layout Section*
Abstract
\end_layout

\begin_layout Standard

\size normal
The purpose of this thesis is to shed light on Buildbot as a Continuous
 Integration tool.
 Continuous Integration (CI) is the process of automating the build and
 testing of code every time a team member commits changes to version control.
 We target to do this by automating most of the delivery process related
 tasks, freeing the developer to do other software development related tasks.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Using Buildbot, developers cand test their components for possible errors
 without the risk of committing to version control and breaking the code.
 Buildbot is an open source project, written in Python on top of the Twisted
 network programming framework.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

In this thesis we will emphasize the extensibility of Buildbot, and how
 we can use Python and Angular to strengthen the capabilities of this tool,
 customizing it to best suit our project.
\end_layout

\begin_layout Standard

\size normal
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Section
Motivation
\end_layout

\begin_layout Standard
Generally, every software company, regardless how large or small, uses Continuou
s Integration principles.
 Verifying and testing code before delivering and merging with the mainline
 is of paramount importance, as it saves money as well as time.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

While smaller companies might make use of more flexible ways of testing,
 the larger ones usually run a CI tool such as Jenkins, on which they run
 builds of every commit that finds its way to the master/trunk.
 This is a widespread and useful practice, albeit narrow, as it only tracks
 main branches.
 If a commit happens to break the code, the trunk gets locked and valuable
 time is spent to fix the issues.
 What I will present in this thesis is how
\end_layout

\begin_layout Section
Contribution
\end_layout

\begin_layout Section
Structure
\end_layout

\begin_layout Chapter
Technologies used
\end_layout

\begin_layout Section
Backend
\end_layout

\begin_layout Subsection
Python
\end_layout

\begin_layout Standard
The bulk of Buildbot is written in 
\emph on
Python
\emph default
.
\end_layout

\begin_layout Standard

\emph on
Python
\emph default
 is a widely used high-level programming language for general-purpose programmin
g, created by Guido van Rossum and first released in 1991.
 It is an interpreted language, meaning that it executes its instructions
 directly and freely, without previously compiling a program into machine-langua
ge instructions.
 The interpreter executes the program directly, translating each statement
 into a sequence of one or more subroutines already compiled into machine
 code.
\end_layout

\begin_layout Standard

\emph on
Python
\emph default
 has a design philosophy that emphasizes code readability (notably using
 whitespace indentation to delimit code blocks rather than curly brackets
 or keywords), and a syntax that allows programmers to express concepts
 in fewer lines of code than might be used in languages such as 
\emph on
C++
\emph default
 or 
\emph on
Java
\emph default
.
\begin_inset CommandInset citation
LatexCommand cite
key "python-usage"

\end_inset

 
\emph on
Python
\emph default
 features a dynamic type system and automatic memory management.
 It supports multiple programming paradigms, including object-oriented,
 imperative, functional and procedural, and has a large and comprehensive
 standard library.
\begin_inset CommandInset citation
LatexCommand cite
key "python-about"

\end_inset

 Besides being present in the Buildbot backend, we will also encounter it
 when implementing custom web dashboards, and in 
\emph on
Angular
\emph default
 with 
\emph on
CoffeeScript
\emph default
, which is a language that cross-compiles to 
\emph on
JavaScript
\emph default
 and has Python-inspired syntax.
\end_layout

\begin_layout Standard
Since 2003, Python has consistently ranked in the top ten most popular programmi
ng languages in the TIOBE Programming Community Index
\begin_inset Foot
status open

\begin_layout Plain Layout
A measure of popularity of programming languages, created and maintained
 by the TIOBE Company based in Eindhoven, Netherlands.
 TIOBE stands for 
\begin_inset Quotes eld
\end_inset

The Importance of Being Earnest
\begin_inset Quotes erd
\end_inset

, taken from the name of a comedy play written by Oscar Wilde at the end
 of the nineteenth century.
\end_layout

\end_inset

.
 As of November 2017, it is the fourth most popular language.
\begin_inset CommandInset citation
LatexCommand cite
key "python-popularity"

\end_inset


\end_layout

\begin_layout Standard
An empirical study found that scripting languages, such as Python, are more
 productive than conventional languages, such as C and Java, for programming
 problems involving string manipulation and search in a dictionary, and
 determined that memory consumption was often "better than Java and not
 much worse than C or C++
\begin_inset Quotes erd
\end_inset

.
\begin_inset CommandInset citation
LatexCommand cite
key "python-empirical-comparison"

\end_inset


\end_layout

\begin_layout Subsection
Twisted
\end_layout

\begin_layout Standard
Twisted is an event-driven network programming framework written in Python
 and licensed under the MIT License.
\end_layout

\begin_layout Standard
Twisted projects variously support TCP, UDP, SSL/TLS, IP multicast, Unix
 domain sockets, a large number of protocols (including HTTP, XMPP, NNTP,
 IMAP, SSH, IRC, FTP, and others), and much more.
 Twisted is based on the event-driven programming paradigm, which means
 that users of Twisted write short callbacks which are called by the framework.
\end_layout

\begin_layout Subsubsection
Protocol/transport separation
\end_layout

\begin_layout Standard
Twisted is designed for complete separation between logical protocols (usually
 relying on stream-based connection semantics, such as HTTP or POP3) and
 physical transport layers supporting such stream-based semantics (such
 as files, sockets or SSL libraries).
 Connection between a logical protocol and a transport layer happens at
 the last possible moment — just before information is passed into the logical
 protocol instance.
 The logical protocol is informed of the transport layer instance, and can
 use it to send messages back and to check for the peer's identity.
 Note that it is still possible, in protocol code, to deeply query the transport
 layer on transport issues (such as checking a client-side SSL certificate).
 Naturally, such protocol code will fail (raise an exception) if the transport
 layer does not support such semantics.
\end_layout

\begin_layout Subsubsection
The Deferred API
\end_layout

\begin_layout Standard
Central to the Twisted application model is the concept of a deferred (elsewhere
 called a future).
 A deferred is an instance of a class designed to receive and process a
 result which has not been computed yet, for example because it is based
 on data from a remote peer.
 Deferreds can be passed around, just like regular objects, but cannot be
 asked for their value.
 Each deferred supports a callback chain.
 When the deferred gets the value, it is passed to the functions on the
 callback chain, with the result of each callback becoming the input for
 the next.
 Deferreds make it possible to arrange to operate on the result of a function
 call before its value has become available.
\end_layout

\begin_layout Standard
For example, if a deferred returns a string from a remote peer containing
 an IP address in quad format, a callback can be attached to translate it
 into a 32-bit number.
 Any user of the deferred can now treat it as a deferred returning a 32-bit
 number.
 This, and the related ability to define "errbacks" (callbacks which are
 called as error handlers), allows code to specify in advance what to do
 when an asynchronous event occurs, without stopping to wait for the event.
 In non-event-driven systems, for example using threads, the operating system
 incurs premature and additional overhead organizing threads each time a
 blocking call is made.
\end_layout

\begin_layout Subsubsection
Thread support
\end_layout

\begin_layout Standard
Twisted supports an abstraction over raw threads — using a thread as a deferred
 source.
 Thus, a deferred is returned immediately, which will receive a value when
 the thread finishes.
 Callbacks can be attached which will run in the main thread, thus alleviating
 the need for complex locking solutions.
 A prime example of such usage, which comes from Twisted's support libraries,
 is using this model to call into databases.
 The database call itself happens on a foreign thread, but the analysis
 of the result happens in the main thread.
\end_layout

\begin_layout Subsection
Database
\end_layout

\begin_layout Standard
As of version 0.8.0, Buildbot has used a database as part of its storage backend.
 All access to the Buildbot database is mediated by database connector classes.
 These classes provide a functional, asynchronous interface to other parts
 of Buildbot, and encapsulate the database-specific details in a single
 location in the codebase.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
The connectors all use 
\emph on
SQLAlchemy Core
\emph default
 to achieve (almost) database-independent operation.
 Note that the 
\emph on
SQLAlchemy ORM
\emph default
 is not used in Buildbot.
 Database queries are carried out in threads, and report their results back
 to the main thread via Twisted Deferreds.
 The database schema is maintained with 
\emph on
SQLAlchemy-Migrate
\emph default
.
 This package handles the details of upgrading users between different schema
 versions.
\begin_inset CommandInset citation
LatexCommand cite
key "buildbot-database"

\end_inset


\end_layout

\begin_layout Standard
In the default configuration Buildbot uses a file-based 
\emph on
SQLite
\emph default
 database, stored in the 
\family typewriter
state.sqlite
\family default
 file of the master’s base directory.
\begin_inset CommandInset citation
LatexCommand cite
key "buildbot-cfg"

\end_inset


\end_layout

\begin_layout Standard
SQLite is a relational database management system (DBMS) contained in a
 C programming library.
 In contrast to many other database management systems, SQLite is not a
 client–server database engine.
 Rather, it is embedded into the end program.
 SQLite is ACID-compliant
\begin_inset Foot
status open

\begin_layout Plain Layout
Acronym for 
\emph on
Atomicity, Consistency, Isolation, Durability
\emph default
.
 A set of properties of database transactions intended to guarantee validity
 even in the event of errors, power failures, etc.
\end_layout

\end_inset

 and implements most of the SQL standard, using a dynamically and weakly
 typed SQL syntax that does not guarantee the domain integrity.
\begin_inset CommandInset citation
LatexCommand cite
key "sqlite-apress"

\end_inset

 SQLite is a popular choice as embedded database software for local/client
 storage in application software such as web browsers.
 It is arguably the most widely deployed database engine, as it is used
 today by several widespread browsers, operating systems, and embedded systems
 (such as mobile phones), among others.
 SQLite has bindings to many programming languages, including Python.
 Among its most popular users are browsers like 
\emph on
Google Chrome, Safari 
\emph default
and 
\emph on
Mozilla Firefox 
\emph default
which stores a variety of configuration data (bookmarks, cookies, contacts
 etc.) inside internally managed SQLite databases.
\begin_inset CommandInset citation
LatexCommand cite
key "sqlite-deployed"

\end_inset


\end_layout

\begin_layout Section
Web interface
\end_layout

\begin_layout Subsection
Angular
\end_layout

\begin_layout Standard
info about the development of Angular 
\end_layout

\begin_layout Subsection
NodeJS
\end_layout

\begin_layout Subsection
Gulp
\end_layout

\begin_layout Standard
gulp build system
\end_layout

\begin_layout Subsection
Less
\end_layout

\begin_layout Standard
extension to CSS, backwards compatible, extends CSS with dynamic variables
\end_layout

\begin_layout Subsection
CoffeeScript
\end_layout

\begin_layout Standard
alternative to Angular's typically used TypeScript, a pythonic type of JavaScrip
t
\end_layout

\begin_layout Subsection
pug
\end_layout

\begin_layout Standard
(formerly Jade).
 template engine for NodeJS.
 buildbot's preferred alternative to html
\end_layout

\begin_layout Chapter
Default implementations
\end_layout

\begin_layout Section
Concepts and terminology
\end_layout

\begin_layout Subsection
SourceStamps
\end_layout

\begin_layout Subsection
Changes
\end_layout

\begin_layout Subsection
BuildSets
\end_layout

\begin_layout Subsection
BuildRequests
\end_layout

\begin_layout Subsection
Builders
\end_layout

\begin_layout Subsection
Schedulers
\end_layout

\begin_layout Subsection
Builds
\end_layout

\begin_layout Subsection
Master
\end_layout

\begin_layout Subsection
Workers
\end_layout

\begin_layout Subsection
Users
\end_layout

\begin_layout Subsection
Data API
\end_layout

\begin_layout Section
Web interface
\end_layout

\begin_layout Subsection
Home page
\end_layout

\begin_layout Subsection
Grid view
\end_layout

\begin_layout Subsection
Waterfall view
\end_layout

\begin_layout Subsection
Console view
\end_layout

\begin_layout Subsection
Settings
\end_layout

\begin_layout Chapter
Custom implementations
\end_layout

\begin_layout Section
Backend componentization
\end_layout

\begin_layout Standard
split master configuration into multiple modules to facilitate scalability
\end_layout

\begin_layout Subsection
Email look-up using LDAP
\end_layout

\begin_layout Subsection
Log parsing
\end_layout

\begin_layout Subsection
Preferential build steps
\end_layout

\begin_layout Section
Web interface development
\end_layout

\begin_layout Subsection
Flask/WSGI dashboards
\end_layout

\begin_layout Standard
pros/cons
\end_layout

\begin_layout Subsection
Angular dashboards
\end_layout

\begin_layout Standard
pros/cons
\end_layout

\begin_layout Section
User scripts
\end_layout

\begin_layout Standard
user try scripts to send patches with uncomitted code to buildbot for testing
\end_layout

\begin_layout Section
Extending the source code
\end_layout

\begin_layout Standard
extending buildbot source to allow multiple patchfiles and more API entrypoints
 maybe?
\end_layout

\begin_layout Chapter
Conclusion
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "python-usage"

\end_inset


\size normal

\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

McConnell, Steve, Code Complete, Microsoft Press, 2009, p.
 100
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "python-about"

\end_inset


\size normal

\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

About Python, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.python.org/about/
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "python-popularity"

\end_inset


\size normal

\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

TIOBE Index for November 2017, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.tiobe.com/tiobe-index/
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "python-empirical-comparison"

\end_inset


\size normal

\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

Prechelt, Lutz, An empirical comparison of C, C++, Java, Perl, Python, Rexx,
 and TCL, Fakultät für Informatik, Universität Karlsruhe, 2000
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography

\size normal
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "sqlite-apress"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

Owens, Michael, The Definitive Guide to SQLite, Apress, 2014, p.
 133
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography

\size normal
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "sqlite-deployed"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

{
\end_layout

\end_inset

Most Widely Deployed SQL Database Engine, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://sqlite.org/mostdeployed.html
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography

\size normal
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "buildbot-database"

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Database - Buildbot latest documentation, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.buildbot.net/latest/developer/database.html
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "buildbot-cfg"

\end_inset


\size normal

\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Global Configuration - Buildbot latest documentation, URL: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://docs.buildbot.net/latest/manual/cfg-global.html
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\end_layout

\end_body
\end_document
